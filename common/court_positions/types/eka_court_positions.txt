#EK ADDITION
court_mage_position = {
	category = court_position_category_special
	skill = learning
	max_available_positions = 1
	valid_character = {
		scope:employee = {
			is_imprisoned = no
			is_adult = yes
			has_magic_perk_trigger = yes
		}
	}

	opinion = {
		value = regular_court_position_opinion
	}

	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		add = {
			value = arcana
			multiply = 1.5
			max = 50
			desc = court_position_skill_arcana
		}
		if = {
			limit = {
				has_trait = necromancer
			}
			add = { 
				value = 15
				desc = court_position_necomancer_trait
			}
		}
		if = {
			limit = {
				has_trait = education_magical_ability_5
			}
			add = { 
				value = 25
				desc = court_position_education_magical_ability_5_trait
			}
		}
		if = {
			limit = {
				has_trait = education_magical_ability_4
			}
			add = { 
				value = 20
				desc = court_position_education_magical_ability_4_trait
			}
		}
		else_if = {
			limit = {
				has_trait = education_magical_ability_3
			}
			add = { 
				value = 15
				desc = court_position_education_magical_ability_3_trait
			}
		}
		else_if = {
			limit = {
				has_trait = education_magical_ability_2
			}
			add = { 
				value = 10
				desc = court_position_education_magical_ability_2_trait
			}
		}
		else_if = {
			limit = { 
				has_trait = education_magical_ability_1
			}
			add = { 
				value = 5
				desc = court_position_education_magical_ability_1_trait
			}
		}
		if = {
			limit = {
				has_trait = arcana_bad_1
			}
			add = {
				value = -5
				desc = court_position_arcana_bad_1_trait
			}
		}
		if = {
			limit = {
				has_trait = arcana_bad_2
			}
			add = {
				value = -10
				desc = court_position_arcana_bad_2_trait
			}
		}
		if = {
			limit = {
				has_trait = arcana_bad_3
			}
			add = {
				value = -15
				desc = court_position_arcana_bad_3_trait
			}
		}
		if = {
			limit = {
				has_trait = arcana_good_1
			}
			add = {
				value = 5
				desc = court_position_arcana_good_1_trait
			}
		}
		if = {
			limit = {
				has_trait = arcana_good_2
			}
			add = {
				value = 10
				desc = court_position_arcana_good_2_trait
			}
		}
		if = {
			limit = {
				has_trait = arcana_good_3
			}
			add = {
				value = 15
				desc = court_position_arcana_good_3_trait
			}
		}
		if = {
			limit = {
				has_perk = conjuration_novice_perk
			}
			add = {
				value = 2
				desc = court_position_conjuration_novice_perk
			}
		}
		if = {
			limit = {
				has_perk = conjuration_apprentice_perk
			}
			add = {
				value = 2
				desc = court_position_conjuration_apprentice_perk
			}
		}
		if = {
			limit = {
				has_perk = conjuration_journeyman_perk
			}
			add = {
				value = 2
				desc = court_position_conjuration_journeyman_perk
			}
		}
		if = {
			limit = {
				has_perk = conjuration_expert_perk
			}
			add = {
				value = 2
				desc = court_position_conjuration_expert_perk
			}
		}
		if = {
			limit = {
				has_perk = conjuration_master_perk
			}
			add = {
				value = 2
				desc = court_position_conjuration_master_perk
			}
		}
		if = {
			limit = {
				has_perk = destruction_novice_perk
			}
			add = {
				value = 2
				desc = court_position_destruction_novice_perk
			}
		}
		if = {
			limit = {
				has_perk = destruction_apprentice_perk
			}
			add = {
				value = 2
				desc = court_position_destruction_apprentice_perk
			}
		}
		if = {
			limit = {
				has_perk = destruction_journeyman_perk
			}
			add = {
				value = 2
				desc = court_position_destruction_journeyman_perk
			}
		}
		if = {
			limit = {
				has_perk = destruction_expert_perk
			}
			add = {
				value = 2
				desc = court_position_destruction_expert_perk
			}
		}
		if = {
			limit = {
				has_perk = destruction_master_perk
			}
			add = {
				value = 2
				desc = court_position_destruction_master_perk
			}
		}
		if = {
			limit = {
				has_perk = alteration_novice_perk
			}
			add = {
				value = 2
				desc = court_position_alteration_novice_perk
			}
		}
		if = {
			limit = {
				has_perk = alteration_apprentice_perk
			}
			add = {
				value = 2
				desc = court_position_alteration_apprentice_perk
			}
		}
		if = {
			limit = {
				has_perk = alteration_journeyman_perk
			}
			add = {
				value = 2
				desc = court_position_alteration_journeyman_perk
			}
		}
		if = {
			limit = {
				has_perk = alteration_expert_perk
			}
			add = {
				value = 2
				desc = court_position_alteration_expert_perk
			}
		}
		if = {
			limit = {
				has_perk = alteration_master_perk
			}
			add = {
				value = 2
				desc = court_position_alteration_master_perk
			}
		}
		if = {
			limit = {
				has_perk = illusion_novice_perk
			}
			add = {
				value = 2
				desc = court_position_illusion_novice_perk
			}
		}
		if = {
			limit = {
				has_perk = illusion_apprentice_perk
			}
			add = {
				value = 2
				desc = court_position_illusion_apprentice_perk
			}
		}
		if = {
			limit = {
				has_perk = illusion_journeyman_perk
			}
			add = {
				value = 2
				desc = court_position_illusion_journeyman_perk
			}
		}
		if = {
			limit = {
				has_perk = illusion_expert_perk
			}
			add = {
				value = 2
				desc = court_position_illusion_expert_perk
			}
		}
		if = {
			limit = {
				has_perk = illusion_master_perk
			}
			add = {
				value = 2
				desc = court_position_illusion_master_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_novice_perk
			}
			add = {
				value = 2
				desc = court_position_restoration_novice_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_apprentice_perk
			}
			add = {
				value = 2
				desc = court_position_restoration_apprentice_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_journeyman_perk
			}
			add = {
				value = 2
				desc = court_position_restoration_journeyman_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_expert_perk
			}
			add = {
				value = 2
				desc = court_position_restoration_expert_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_master_perk
			}
			add = {
				value = 2
				desc = court_position_restoration_master_perk
			}
		}
		if = {
			limit = {
				has_perk = necromancy_novice_perk
			}
			add = {
				value = 2
				desc = court_position_necromancy_novice_perk
			}
		}
		if = {
			limit = {
				has_perk = necromancy_apprentice_perk
			}
			add = {
				value = 2
				desc = court_position_necromancy_apprentice_perk
			}
		}
		if = {
			limit = {
				has_perk = necromancy_journeyman_perk
			}
			add = {
				value = 2
				desc = court_position_necromancy_journeyman_perk
			}
		}
		if = {
			limit = {
				has_perk = necromancy_expert_perk
			}
			add = {
				value = 2
				desc = court_position_necromancy_expert_perk
			}
		}
		if = {
			limit = {
				has_perk = necromancy_master_perk
			}
			add = {
				value = 2
				desc = court_position_necromancy_master_perk
			}
		}
		# EKA ALCHEMY EDIT
		if = {
			limit = { has_trait = alchemist_novice }
			add = {
				value = 2
				desc = court_position_alchemist_novice_trait
			}
		}
		if = {
			limit = { has_trait = alchemist_expert }
			add = {
				value = 4
				desc = court_position_alchemist_expert_trait
			}
		}
		if = {
			limit = { has_trait = alchemist_master }
			add = {
				value = 6
				desc = court_position_alchemist_master_trait
			}
		}
		# EKA ALCHEMY EDIT END

		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
	}

	is_shown = { }

	is_shown_character = {
		scope:employee = {
			OR = {
				is_courtier_of = scope:liege
				is_vassal_of = scope:liege
			}
		}
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_mage_position
					any_court_position_holder = {
				        type = court_mage_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		round = no
		gold = {
			value = medium_court_position_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = court_mage_position
						any_court_position_holder = {
					        type = court_mage_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
		}
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			monthly_court_grandeur_change_mult = 0.10
		}
		poor = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.10
		}
		average = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.15
		}
		good = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.20
		}
		excellent = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.25
		}
	}

	custom_employer_modifier_description = court_mage_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
		#arcana = 2 #fake skill, effect applied in ek_magic_values.txt
	}

	candidate_score = {
		value = 150
		add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		if = {
			limit = { exists = scope:employee.var:magicka }
			add = {
				value = scope:employee.var:magicka
				desc = game_concept_magicka
			}
		}
		# AI is less likely to fire the court mage, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
	}

	search_for_courtier = {
		send_interface_toast = {
			title = hire_mage_decision
			custom_tooltip = hire_mage_decision_effect_tooltip
		}
		trigger_event = {
			id = ek_court_position.0001
			days = 14
		}
	}
}

court_physician_court_position = {
	max_available_positions = 1
	category = court_position_category_common
	skill = learning

	opinion = {
		value = regular_court_position_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 1
		# Skill
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
		# Physician
		if = {
			limit = { has_trait = lifestyle_physician }
			add = {
				value = 15
				if = {
					limit = {
						has_trait_xp = { trait = lifestyle_physician value >= 50 }
					}
					add = 15
				}
				if = {
					limit = {
						has_trait_xp = { trait = lifestyle_physician value >= 100 }
					}
					add = 15
				}
				desc = court_position_physician_1_trait
			}
		}
		# Mystic
		if = {
			limit = { has_trait = lifestyle_mystic }
			add = {
				value = 5
				if = {
					limit = {
						has_trait_xp = { trait = lifestyle_mystic value >= 50 }
					}
					add = 5
				}
				if = {
					limit = {
						has_trait_xp = { trait = lifestyle_mystic value >= 100 }
					}
					add = 5
				}
				desc = court_position_mystic_1_trait
			}
		}
		# Herbalist
		if = {
			limit = { has_trait = lifestyle_herbalist }
			add = {
				value = 15
				desc = court_position_herbalist_trait
			}
		}
		# EKA ALCHEMY EDIT
		# Alchemist
		if = {
			limit = { has_trait = alchemist_novice }
			add = {
				value = 5
				desc = court_position_alchemist_novice_trait
			}
		}
		if = {
			limit = { has_trait = alchemist_expert }
			add = {
				value = 10
				desc = court_position_alchemist_expert_trait
			}
		}
		if = {
			limit = { has_trait = alchemist_master }
			add = {
				value = 15
				desc = court_position_alchemist_master_trait
			}
		}
		if = {
			limit = {
				has_perk = herbalist_perk
			}
			add = {
				value = 2
				desc = court_position_herbalist_perk
			}
		}
		if = {
			limit = {
				has_perk = forager_perk
			}
			add = {
				value = 2
				desc = court_position_forager_perk
			}
		}
		if = {
			limit = {
				has_perk = metallurgist_perk
			}
			add = {
				value = 1
				desc = court_position_metallurgist_perk
			}
		}
		if = {
			limit = {
				has_perk = experimenter_perk
			}
			add = {
				value = 3
				desc = court_position_experimenter_perk
			}
		}
		if = {
			limit = {
				has_perk = benefactor_perk
			}
			add = {
				value = 4
				desc = court_position_benefactor_perk
			}
		}
		if = {
			limit = {
				has_perk = poisoner_perk
			}
			add = {
				value = 2
				desc = court_position_poisoner_perk
			}
		}
		if = {
			limit = {
				has_perk = physician_perk
			}
			add = {
				value = 4
				desc = court_position_physician_perk
			}
		}
		if = {
			limit = {
				has_perk = purity_perk
			}
			add = {
				value = 2
				desc = court_position_purity_perk
			}
		}
		#if = {
		#	limit = {
		#		has_perk = alchemist_perk
		#	}
		#	add = {
		#		value = 2
		#		desc = court_position_alchemist_perk
		#	}
		#}
		# EKA ALCHEMY EDIT END
		# Education
		if = {
			limit = { has_trait = education_learning }
			add = {
				value = 4
				if = {
					limit = { has_trait = education_learning_2 }
					add = 4
				}
				else_if = {
					limit = { has_trait = education_learning_3 }
					add = 8
				}
				else_if = {
					limit = { has_trait = education_learning_4 }
					add = 12
				}
				else_if = {
					limit = { has_trait = education_learning_5 }
					add = 22
				}
				desc = education_learning
			}
		}
		if = {
			limit = {
				has_trait = blind
			}
			add = {
				value = -50
				desc = court_position_blind_trait
			}
		}
		if = {
			limit = {
				any_character_artifact = {
					has_artifact_modifier = artifact_physician_aptitude_1_modifier
				}
			}
			add = 20
		}
		# EK EDIT: re-enabled this vanilla parameter
		if = {
			limit = {
				culture = { has_cultural_parameter = court_physicians_are_better }
			}
			add = {
				value = learning
				desc = court_physician_tradition_bonus
			}
		}
		# EK EDIT END
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
		#EK EDIT, Restoration is a perfectly valid school of magic (especially for court physicians)
		if = {
			limit = {
				has_perk = restoration_novice_perk
			}
			add = {
				value = 5
				desc = court_position_restoration_novice_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_apprentice_perk
			}
			add = {
				value = 5
				desc = court_position_restoration_apprentice_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_journeyman_perk
			}
			add = {
				value = 5
				desc = court_position_restoration_journeyman_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_expert_perk
			}
			add = {
				value = 5
				desc = court_position_restoration_expert_perk
			}
		}
		if = {
			limit = {
				has_perk = restoration_master_perk
			}
			add = {
				value = 10
				desc = court_position_restoration_master_perk
			}
		}
	}

	is_shown = { }

	# Is this an available position for this court? (root is court owner)
	valid_position = { }

	is_shown_character = {
		scope:employee = {
			is_courtier_of = scope:liege
			is_imprisoned = no
			is_mindless_character = no #EK EDIT
		}
	}


	valid_character = {
	}

	revoke_cost = {
		prestige =  {
			value = major_court_position_prestige_revoke_cost
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = court_physician_court_position
					any_court_position_holder = {
				        type = court_physician_court_position
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
			if = {
				limit = {
					exists = this
					is_ai = yes
				}
				multiply = 0
			}
		}
	}

	salary = {
		gold = {
			value = court_position_physician_salary
			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					scope:liege = {
						exists = dynasty
						dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

						employs_court_position = court_physician_court_position
						any_court_position_holder = {
					        type = court_physician_court_position
							exists = dynasty
							house = prev.house
						}
					}
				}
				multiply = {
					value = 0.0
					desc = inner_circle_salary_mod
					format = "BASE_VALUE_FORMAT_DECIMALS_MINUS_POSITIVE"
				}
			}
			if = {
				limit = {
					scope:liege = {
						employs_court_position = court_physician_court_position
						any_court_position_holder = {
					        type = court_physician_court_position
					        scope:liege = {
								has_hook_of_type = {
									type = obligation_hook
									target = prev
								}
							}
						}
					}
				}
				multiply = {
					value = 0.5
					desc = obligation_hook_salary
				}
			}
		}
		round = no
	}

	is_powerful_agent = yes

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			monthly_court_grandeur_change_mult = 0.10
		}
		poor = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.10
		}
		average = {
			court_grandeur_baseline_add = 1
			monthly_court_grandeur_change_mult = 0.15
		}
		good = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.20
		}
		excellent = {
			court_grandeur_baseline_add = 2
			monthly_court_grandeur_change_mult = 0.25
		}
	}

	custom_employer_modifier_description = court_physician_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		learning = 1
	}

	#custom_employee_modifier_description = court_physician_employee_custom_effect_description

	on_court_position_received = {
		court_physician_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		court_physician_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		court_physician_title_invalidated_effect = yes
	}

	search_for_courtier = {
		send_interface_toast = {
			title = hire_physician_decision
			custom_tooltip = hire_physician_decision_effect_tooltip
		}
		hidden_effect = {
			add_character_flag = {
				flag = health_3001_hire_physician_decision_text
				days = 20
			}
		}

		trigger_event = {
			id = health.3001
			days = 14
		}
	}

	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
        value = 150
        add = scope:base_value
        add = court_position_candidate_score_base_value
        add = court_position_candidate_aptitude_value
		# No debt considerations for Physicians, they are too important
        # AI is less likely to fire the court physician, unless they have a better candidate.
        if = {
            limit = {
                exists = scope:firing_court_position
            }
            add = 200
            scope:employee = {
                # Does the liege have a better candidate that they should be hiring instead?
                if = {
                    limit = {
                        scope:highest_available_aptitude > scope:employee_aptitude
                    }
                    add = -150
                }
            }
        }
		
		if = {
			limit = {
				scope:liege = {
					any_held_county = {
						any_county_province = {
							any_province_epidemic = {
								outbreak_intensity = minor
							}
						}
					}
				}
			}
			add = 50
		}
		if = {
			limit = {
				scope:liege = {
					any_held_county = {
						any_county_province = {
							any_province_epidemic = {
								outbreak_intensity = major
							}
						}
					}
				}
			}
			add = 100
		}
		if = {
			limit = {
				scope:liege = {
					any_held_county = {
						any_county_province = {
							any_province_epidemic = {
								outbreak_intensity = apocalyptic
							}
						}
					}
				}
			}
			add = 150
		}
		
        add = adjust_court_position_score_for_unity
    }
}